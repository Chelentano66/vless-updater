import yaml

TEMPLATE_PATH = "scripts/template.yaml"
OUTPUT_PATH = "config.yaml"

# üîπ –ó–¥–µ—Å—å –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏:
# –ü—Ä–∏–º–µ—Ä –ø—Ä–æ–∫—Å–∏-–æ–±—ä–µ–∫—Ç–∞:
proxies = [
    {
        "name": "US-VLESS",
        "type": "vless",
        "server": "us.example.com",
        "port": 443,
        "uuid": "your-uuid-here",
        "tls": True,
        "network": "ws",
        "ws-opts": {
            "path": "/websocket",
            "headers": {
                "Host": "us.example.com"
            }
        }
    },
    {
        "name": "DE-VLESS",
        "type": "vless",
        "server": "de.example.com",
        "port": 443,
        "uuid": "your-uuid-here",
        "tls": True,
        "network": "ws",
        "ws-opts": {
            "path": "/path",
            "headers": {
                "Host": "de.example.com"
            }
        }
    }
    # ... –∏ —Ç.–¥.
]

# üî∏ –ó–∞–≥—Ä—É–∂–∞–µ–º —à–∞–±–ª–æ–Ω
with open(TEMPLATE_PATH, "r", encoding="utf-8") as f:
    template = yaml.safe_load(f)

# üî∏ –í—Å—Ç–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏
template["proxies"] = proxies

# üî∏ –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ –≤ MAIN proxy-group
for group in template.get("proxy-groups", []):
    if group.get("name") == "MAIN":
        group["proxies"] = [proxy["name"] for proxy in proxies]
        break

# üî∏ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ç–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥
with open(OUTPUT_PATH, "w", encoding="utf-8") as f:
    yaml.dump(template, f, allow_unicode=True, sort_keys=False)
